module ProviderNameProvider {
  @ React Context Provider for feature/cross-cutting concern
  @ Provides what it provides to child components

  type: "provider"
  
  location: "src/providers/ProviderNameProvider.tsx"
  
  interface {
    @ Provider component
    function ProviderNameProvider() -> JSXElement
    
    @ Context hook
    function useProviderName() -> ContextValue
    
    @ Optional HOC
    function withProviderName() -> Component
  }
  
  state {
    @ Context value shape
    private contextValue: Object
    
    @ Provider internal state
    private initialized: boolean
  }
  
  imports {
    allow "react" as external
    allow "../stores/store"
    allow "../services/service"
    allow "../hooks/hook"
    allow "../types"
    deny imports ["../components/*"]
    deny imports ["../data/*"]
  }
  
  constraints {
    require pattern.context_api
    require pattern.default_value
    require pattern.error_boundary
    require pattern.context_check
    require pattern.memoized_value
    deny pattern.complex_logic
    require pattern.cleanup_effects
    deny exports ["Context", "_*"]
    warn file.lines > 150
    deny file.lines > 250
  }
}