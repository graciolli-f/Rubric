module UtilityNameUtils {
  @ Pure utility functions for purpose
  @ No side effects, deterministic outputs

  type: "utility"
  
  location: "src/utils/utility-name.ts"
  
  interface {
    @ Formatting functions
    function formatSomething() -> string
    function parseSomething() -> OutputType
    
    @ Validation functions
    function validateSomething() -> boolean
    function isCondition() -> boolean
    
    @ Transformation functions
    function transformInputToOutput() -> OutputType
    function normalizeData() -> NormalizedType
    
    @ Calculation functions
    function calculateMetric() -> number
    function aggregateData() -> Summary
    
    @ Helper types and constants
    readonly CONSTANT_NAME: ConstantType
    type HelperType
  }
  
  state {
    @ No mutable state allowed in utilities
    @ Use module-level constants instead
    private readonly CONFIG: Object
    private readonly REGEX_PATTERNS: Object
  }
  
  imports {
    allow "../types"
    allow "date-fns" as external
    allow "lodash" as external
    allow "ramda" as external
    allow "./other-util"
    deny imports ["react", "vue", "@angular/*"]
    deny imports ["../stores/*", "../services/*", "../data/*"]
    deny imports ["../components/*"]
  }
  
  constraints {
    deny io.*
    deny pattern.side_effects
    deny pattern.mutations
    deny pattern.async
    deny pattern.promises
    require pattern.deterministic
    deny pattern.random_without_seed
    deny pattern.date_now
    require pattern.defensive
    require pattern.jsdoc
    require pattern.unit_testable
    require exports ["[!_]*"]
    warn file.lines > 200
    deny file.lines > 400
  }
}