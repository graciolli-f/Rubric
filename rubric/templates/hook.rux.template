module HookNameHook {
  @ Custom React hook for specific purpose
  @ Encapsulates reusable logic for use case

  type: "hook"
  
  location: "src/hooks/useHookName.ts"
  
  interface {
    @ Hook function
    function useHookName() -> HookResult
  }
  
  state {
    @ Hook internal state
    private cache: Map
    private subscribers: Set
  }
  
  imports {
    allow "react" as external
    allow "./useOtherHook"
    allow "../stores/store"
    allow "../services/service"
    allow "../types"
    allow "../utils/hooks"
    deny imports ["../components/*"]
    deny imports ["../data/*"]
  }
  
  constraints {
    require pattern.hook_naming
    require pattern.hook_rules
    require pattern.error_boundaries
    require pattern.cleanup_effects
    require pattern.dependency_arrays
    require pattern.testable
    deny pattern.direct_dom
    deny exports ["_*", "cache"]
    warn file.lines > 150
    deny file.lines > 250
  }
}