module EntityNameData {
  @ Data access layer for entity
  @ Direct API/database calls only, no business logic

  type: "data"
  
  location: "src/data/entity-name-data.ts"
  
  interface {
    @ CRUD operations
    function fetchEntity() -> Promise
    function fetchEntities() -> Promise
    function createEntity() -> Promise
    function updateEntity() -> Promise
    function deleteEntity() -> Promise
    
    @ Specialized queries
    function fetchEntityByCriteria() -> Promise
    function countEntities() -> Promise
    function existsEntity() -> Promise
    
    @ Batch operations
    function batchCreateEntities() -> Promise
    function batchUpdateEntities() -> Promise
  }
  
  state {
    @ Connection/client references
    private client: DatabaseClient
    private apiEndpoint: string
  }
  
  imports {
    allow "../lib/supabase"
    allow "../lib/api-client"
    allow "axios" as external
    allow "../types"
    allow "../utils/query-builder"
    deny imports ["../services/*", "../stores/*"]
    deny imports ["../components/*", "../hooks/*"]
  }
  
  constraints {
    require pattern.single_responsibility
    deny pattern.business_logic
    deny pattern.data_transformation
    require pattern.throw_on_error
    deny pattern.error_transformation
    deny pattern.caching
    deny pattern.validation
    deny exports ["_*", "client", "apiEndpoint"]
    warn file.lines > 200
    deny file.lines > 300
  }
}